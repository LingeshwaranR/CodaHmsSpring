plugins {
    id 'org.springframework.boot' version '2.2.3.BUILD-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
    id 'checkstyle'

}

group = 'global.coda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}
ext {
    checkstyleVersion = '8.11'
}
checkstyle {
    sourceSets = []
    toolVersion = checkstyleVersion
    config = rootProject.resources.text.fromFile('etc/checkstyle/rules.xml')
}
task checkstyle {
    dependsOn 'checkstyleMain'
    dependsOn 'checkstyleTest'
    tasks.findByName('checkstyleTest').mustRunAfter 'checkstyleMain'
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //LOGGER
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '7.0.0'
    //FLYWAY
    implementation 'org.flywaydb:flyway-core'


}

test {
    useJUnitPlatform()
}
